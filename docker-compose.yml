services:
  image-processor:
    build:
      context: .
      dockerfile: Dockerfile.image-processor
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  license-registry:
    build:
      context: .
      dockerfile: Dockerfile.license-registry
    ports:
      - "5001:5001"
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    ports:
      - "8000:8000"
    depends_on:
      - image-processor
      - license-registry
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.api-gateway
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/public
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "7233:7233"
    volumes:
      - ./frontend:/app
    networks:
      - app-network

  node-app:
    build:
      context: .
      dockerfile: ./node-app/Dockerfile.node
    image: node-app
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/dbdata
    ports:
      - '8085:8085'
    depends_on:
      - mongodb
    volumes:
      - .:/src
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8080:8080"
    volumes:
      - ./jenkins_home:/var/jenkins_home
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  jenkins_home:
